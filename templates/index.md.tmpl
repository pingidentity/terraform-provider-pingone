---
layout: ""
page_title: "Provider: PingOne"
description: |-
  This PingOne provider provides resources and data sources to manage the PingOne platform as infrastructure-as-code, through the PingOne management API.
---

# PingOne Provider

The PingOne provider interacts with the configuration of the PingOne platform via the management API. The provider requires credentials from worker application client before it can be used.

## Getting Started

To get started using the PingOne Terraform provider, first you'll need an active PingOne cloud subscription.  Get instant access with a [PingOne trial account](https://www.pingidentity.com/en/try-ping.html), or read more about Ping Identity at [pingidentity.com](https://www.pingidentity.com)

### Configure PingOne for Terraform access

The following steps describe how to connect Terraform to your PingOne instance:

1. Log in to your PingOne Administration Console.  On registration for a trial, a link will be sent to your provided email address.
2. Open the *Administrators* environment
3. Follow the guide [Create an application connection](https://apidocs.pingidentity.com/pingone/main/v1/api/#create-an-application-connection) to create a worker application.  Choose an appropriate name (e.g. *PingOne Terraform Provider*)
4. In the resulting application on the *Configuration* tab, expand the *General* section and extract the *Client ID*, *Client Secret* and *Environment ID*.  These are used in the following examples to authenticate the provider to the PingOne organisation.

Authenticating the provider also requires a code that represents the PingOne region.  See the [Schema](#schema) section below for a list of possible values.

## Example Usage

### Authenticate using static worker client credentials

{{ tffile "examples/provider/provider.tf" }}

### Authenticate using environment variable worker client credentials

{{ tffile "examples/provider/provider-env.tf" }}

{{ codefile "shell" (printf "%s" "examples/provider/provider-env.sh") }}

### Authenticate using an environment variable access token

{{ tffile "examples/provider/provider-env.tf" }}

{{ codefile "shell" (printf "%s" "examples/provider/provider-env-at.sh") }}

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `region` (String) The PingOne region to use.  Options are `AsiaPacific`, `Canada`, `Europe` and `NorthAmerica`.  Default value can be set with the `PINGONE_REGION` environment variable.
- `api_access_token` (String) The access token used for provider resource management against the PingOne management API.  Default value can be set with the `PINGONE_API_ACCESS_TOKEN` environment variable.  Must provide only one of `api_access_token` (when obtaining the worker token outside of the provider) and `client_id` (when the provider should fetch the worker token during operations).
- `client_id` (String) Client ID for the worker app client.  Default value can be set with the `PINGONE_CLIENT_ID` environment variable.  Must provide only one of `api_access_token` (when obtaining the worker token outside of the provider) and `client_id` (when the provider should fetch the worker token during operations).  Must be configured with `client_secret` and `environment_id`.
- `client_secret` (String) Client secret for the worker app client.  Default value can be set with the `PINGONE_CLIENT_SECRET` environment variable.  Must be configured with `client_id` and `environment_id`.
- `environment_id` (String) Environment ID for the worker app client.  Default value can be set with the `PINGONE_ENVIRONMENT_ID` environment variable.  Must be configured with `client_id` and `client_secret`.

### Optional

- `force_delete_production_type` (Boolean) Choose whether to force-delete any configuration that has a `PRODUCTION` type parameter.  The platform default is that `PRODUCTION` type configuration will not destroy without intervention to protect stored data.  By default this parameter is set to `false` and can be overridden with the `PINGONE_FORCE_DELETE_PRODUCTION_TYPE` environment variable.
