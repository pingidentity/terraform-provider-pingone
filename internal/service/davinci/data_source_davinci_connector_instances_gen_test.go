// Copyright Â© 2025 Ping Identity Corporation
// Code generated by ping-terraform-plugin-framework-generator

package davinci_test

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/pingidentity/terraform-provider-pingone/internal/acctest"
)

func TestAccDavinciConnectorInstancesDataSource_Get(t *testing.T) {
	t.Parallel()

	resourceName := acctest.ResourceNameGen()

	resource.Test(t, resource.TestCase{
		PreCheck: func() {
			acctest.PreCheckClient(t)
			acctest.PreCheckNoFeatureFlag(t)
		},
		ProtoV6ProviderFactories: acctest.ProtoV6ProviderFactories,
		//TODO add CheckDestroy if necessary for any created resources
		ErrorCheck: acctest.ErrorCheck(t),
		Steps: []resource.TestStep{
			{
				Config: testAccDavinciConnectorInstancesDataSourceConfig_Get(resourceName),
				Check:  davinciConnectorInstancesDataSource_CheckComputedValuesComplete(resourceName),
			},
		},
	})
}

func testAccDavinciConnectorInstancesDataSourceConfig_Get(resourceName string) string {
	return fmt.Sprintf(`
	%[1]s

	//TODO create any resource dependencies

data "pingone_davinci_connector_instances" "%[2]s" {
  environment_id = data.pingone_environment.general_test.id

  //TODO add depends_on for any dependencies if necessary
  //depends_on = []
}
`, acctest.GenericSandboxEnvironment(), resourceName)
}

// Validate any computed values when applying complete HCL
func davinciConnectorInstancesDataSource_CheckComputedValuesComplete(resourceName string) resource.TestCheckFunc {
	return resource.TestCheckResourceAttrSet(fmt.Sprintf("data.pingone_davinci_connector_instances.%s", resourceName), "id")

}
