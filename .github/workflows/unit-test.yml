# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Unit Tests
on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - '.vscode'
      - '.gitignore'
      - 'CHANGELOG.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
      - '.changelog/**'
      - 'contributing/**'
      - 'docs/**'
      - 'examples/**'
      - 'scripts/**'
      - 'templates/**'
  push:
    paths-ignore:
      - 'README.md'
      - '.vscode'
      - '.gitignore'
      - 'CHANGELOG.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
      - '.changelog/**'
      - 'contributing/**'
      - 'docs/**'
      - 'examples/**'
      - 'scripts/**'
      - 'templates/**'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        make build

  test:
    name: Unit Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - name: Get dependencies
      run: |
        go mod download

    - name: Vet
      timeout-minutes: 10
      run: |
        make vet
        
    - name: Unit tests
      timeout-minutes: 10
      run: |
        make test
