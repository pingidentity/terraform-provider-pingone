# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Multi-version Acceptance Tests
on:
  workflow_dispatch:
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  schedule:
    - cron: '0 6 14,28 * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Acceptance Test
    needs: [build]
    runs-on: ubuntu-latest

    env:
      PINGONE_TESTING_PROVIDER_VERSION: test
      PINGONE_CLIENT_ID: ${{ secrets.EU_PINGONE_CLIENT_ID }}
      PINGONE_CLIENT_SECRET: ${{ secrets.EU_PINGONE_CLIENT_SECRET }}
      PINGONE_ENVIRONMENT_ID: ${{ secrets.EU_PINGONE_ENVIRONMENT_ID }}
      PINGONE_REGION: "Europe"
      PINGONE_LICENSE_ID: ${{ secrets.EU_PINGONE_LICENSE_ID }}
      PINGONE_ORGANIZATION_ID: ${{ secrets.EU_PINGONE_ORGANIZATION_ID }}
      PINGONE_ORGANIZATION_NAME: ${{ secrets.EU_PINGONE_ORGANIZATION_NAME }}
      PINGONE_KEY_PKCS12: ${{ secrets.PINGONE_KEY_PKCS12 }}
      PINGONE_KEY_PKCS10_CSR: ${{ secrets.PINGONE_KEY_PKCS10_CSR }}
      PINGONE_KEY_PEM_CSR: ${{ secrets.PINGONE_KEY_PEM_CSR }}
      PINGONE_KEY_PEM_CSR_RESPONSE: ${{ secrets.PINGONE_KEY_PEM_CSR_RESPONSE }}
      PINGONE_KEY_PKCS7_CERT: ${{ secrets.PINGONE_KEY_PKCS7_CERT }}
      PINGONE_KEY_PEM_CERT: ${{ secrets.PINGONE_KEY_PEM_CERT }}
      PINGONE_DOMAIN_CERTIFICATE_PEM: ${{ secrets.PINGONE_DOMAIN_CERTIFICATE_PEM }}
      PINGONE_DOMAIN_INTERMEDIATE_CERTIFICATE_PEM: ${{ secrets.PINGONE_DOMAIN_INTERMEDIATE_CERTIFICATE_PEM }}
      PINGONE_DOMAIN_KEY_PEM: ${{ secrets.PINGONE_DOMAIN_KEY_PEM }}
      PINGONE_VERIFIED_EMAIL_DOMAIN: ${{ secrets.PINGONE_VERIFIED_EMAIL_DOMAIN }}
      PINGONE_GOOGLE_JSON_KEY: ${{ secrets.PINGONE_GOOGLE_JSON_KEY }}
      PINGONE_GOOGLE_FIREBASE_CREDENTIALS: ${{ secrets.PINGONE_GOOGLE_JSON_KEY }}
      PINGONE_TWILIO_TEST_SKIP: true
      PINGONE_SYNIVERSE_TEST_SKIP: true

    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform: # We test the earliest supported (v1.1), and the latest supported (v1.6)
          - '1.1.*'
          - '1.6.*'
      max-parallel: 1
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ matrix.terraform }}
        terraform_wrapper: false

    - name: Get dependencies
      run: |
        go mod download

    - name: Sweep to prepare
      run: |
        make sweep

    - name: TF acceptance tests
      timeout-minutes: 120
      run: |
        make testacc

    - name: Sweep to cleanup
      run: |
        make sweep
