name: Multi-version Acceptance Tests (Beta)
on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 14,28 * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
 
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true
        id: go

      - name: Get dependencies
        run: |
          go mod download

      - name: Build
        run: |
          make build BETA=true

  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Acceptance Test
    needs: [build]
    runs-on: ubuntu-latest

    env:
      TESTACC_BETA: true
      PINGONE_TESTING_PROVIDER_VERSION: test
      PINGONE_CLIENT_ID: ${{ vars.PINGONE_PROD_EU_FF_CLIENT_ID_CLIENT_SECRET_BASIC }}
      PINGONE_CLIENT_SECRET: ${{ secrets.PINGONE_PROD_EU_FF_CLIENT_SECRET_CLIENT_SECRET_BASIC }}
      PINGONE_ENVIRONMENT_ID: ${{ vars.PINGONE_PROD_EU_FF_ENVIRONMENT_ID }}
      PINGONE_REGION_CODE: "EU"
      PINGONE_LICENSE_ID: ${{ vars.PINGONE_PROD_EU_FF_LICENSE_ID }}
      PINGONE_ORGANIZATION_ID: ${{ vars.PINGONE_PROD_EU_FF_ORG_ID }}
      # Two vars needed for application data source acceptance tests - can be removed when CDI-631 is done
      PINGONE_KEY_PKCS7_CERT: ${{ secrets.PINGONE_KEY_PKCS7_CERT }}
      PINGONE_KEY_PEM_CERT: ${{ secrets.PINGONE_KEY_PEM_CERT }}
      # Set skips
      PINGONE_TWILIO_TEST_SKIP: true
      PINGONE_SYNIVERSE_TEST_SKIP: true
      PINGONE_EMAIL_DOMAIN_TEST_SKIP: false
      PINGONE_CUSTOM_DOMAIN_TEST_SKIP: false

    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform: # We test the earliest supported (v1.4).  The latest supported is in the multi-region test
          - '1.4.*'
      max-parallel: 1

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true
        id: go

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false

      - name: Get dependencies
        run: |
          go mod download

      - name: Sweep to prepare
        run: |
          make sweep

      - name: TF acceptance tests
        timeout-minutes: 45
        run: |
          make testacc BETA=true

      - name: Sweep to clean up
        run: |
          make sweep

  onfailure:
    if: ${{ failure() && github.event_name == 'schedule' }}
    needs: [build, test]
    name: Send failure webhook
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl --silent --request POST "${{ secrets.FAILURE_WEBHOOK_URL }}" \
          --header 'Accept: application/json' \
          --header 'Content-Type: text/plain' \
          --data-raw '{
              "WorkflowName": "${{ github.workflow }}",
              "WorkflowURL": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "RepoName" : "${{ github.repository }}",
          }'